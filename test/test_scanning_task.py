from rig_remote.models.scanning_task import ScanningTask
from rig_remote.models.bookmark import Bookmark
from rig_remote.models.channel import Channel
import pytest


@pytest.mark.parametrize(
    "frequency_modulation, scan_mode, new_bookmark_list, range_min, range_max, interval, delay, passes, sgn_level, wait, record, auto_bookmark, log, bookmarks, expected_interval",
    [
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            True,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            True,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            True,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            True,
            True,
            True,
            True,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="FM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "FM",
            "bookmarks",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="FM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "FM",
            "frequency",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="FM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1000,
        ),
        (
            "AM",
            "frequency",
            [],
            1,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1000,
        ),
        (
            "AM",
            "bookmarks",
            [],
            6,
            4,
            1,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
        (
            "AM",
            "bookmarks",
            [],
            6,
            4,
            1,
            1,
            0,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
            1,
        ),
    ],
)
def test_scanning_task_init(
    frequency_modulation,
    scan_mode,
    new_bookmark_list,
    range_min,
    range_max,
    interval,
    delay,
    passes,
    sgn_level,
    wait,
    record,
    auto_bookmark,
    log,
    bookmarks,
    expected_interval,
):
    scanning_task = ScanningTask(
        frequency_modulation=frequency_modulation,
        scan_mode=scan_mode,
        new_bookmark_list=new_bookmark_list,
        range_min=range_min,
        range_max=range_max,
        interval=interval,
        delay=delay,
        passes=passes,
        sgn_level=sgn_level,
        wait=wait,
        record=record,
        auto_bookmark=auto_bookmark,
        log=log,
        bookmarks=bookmarks,
    )
    assert scanning_task.interval == expected_interval


@pytest.mark.parametrize(
    "frequency_modulation, scan_mode, new_bookmark_list, range_min, range_max, interval, delay, passes, sgn_level, wait, record, auto_bookmark, log, bookmarks",
    [
        (
            "AM",
            "frequency",
            [],
            6,
            4,
            1000,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
        ),
        (
            "AM",
            "frequenc",
            [],
            1,
            4,
            1000,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
        ),
        (
            "AM",
            "bookmark",
            [],
            1,
            4,
            1000,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
        ),
        (
            "AM",
            "not_supported_mode",
            [],
            1,
            4,
            1000,
            1,
            1,
            0,
            False,
            False,
            False,
            False,
            [
                Bookmark(
                    channel=Channel(input_frequency="1", modulation="AM"),
                    description="description1",
                    lockout="L",
                )
            ],
        ),
    ],
)
def test_scanning_task_init_error(
    frequency_modulation,
    scan_mode,
    new_bookmark_list,
    range_min,
    range_max,
    interval,
    delay,
    passes,
    sgn_level,
    wait,
    record,
    auto_bookmark,
    log,
    bookmarks,
):
    with pytest.raises(ValueError):
        ScanningTask(
            frequency_modulation=frequency_modulation,
            scan_mode=scan_mode,
            new_bookmark_list=new_bookmark_list,
            range_min=range_min,
            range_max=range_max,
            interval=interval,
            delay=delay,
            passes=passes,
            sgn_level=sgn_level,
            wait=wait,
            record=record,
            auto_bookmark=auto_bookmark,
            log=log,
            bookmarks=bookmarks,
        )
